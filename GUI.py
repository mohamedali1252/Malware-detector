#!/usr/bin/python3

from Tkinter import *
import os
import subprocess
import linecache
import time

err = "No processes to kill"

def Logic():
	global err
	os.system("top -b -n 20 -d 1.0 > output.txt")
	os.system(''' awk '$8=="R" {print $1, $10;} ' output.txt > output2.txt''')
	os.system("sort -k1 output2.txt > output3.txt")
	f = open("output3.txt", "r")
	dict={}
	pid = []
	for x in f:
		y = x.split()
		if y[0] not in dict.keys():
			dict[y[0]]=list(map(float, y[1:]))
		else:
			dict[y[0]].extend(list(map(float, y[1:])))
					
	for i in dict:
		maxim = max(dict[i])
		minim = min(dict[i])
		diff = maxim - minim
		if diff > 5.0:
			pid.append(i)

	for z in range(len(pid)):
		ppid = pid[z]
		command = "pmap -XX -q " + ppid +" > pmp.txt"
		os.system(command)
		v = open("pmp.txt", "a")
		for i in range(20):
			li = subprocess.check_output(['pmap','-XX','-q',ppid])
			v.write(li)
			time.sleep(1)
		v.close()
		line1 = subprocess.Popen(['grep','-n','-e','heap','pmp.txt'],stdout=subprocess.PIPE)
		line2= subprocess.check_output( ['cut', '-d', ':', '-f', '1'], stdin=line1.stdout)
		line2 = line2.split()
		for i in range(len(line2)):
			line4 = linecache.getline('pmp.txt', int(line2[i])+1)
			g = open("ouh.txt", "a")
			g.write(line4)
		g.close()
		b = subprocess.check_output(['awk', '{print $6;}', 'ouh.txt'])
		b = b.split()
		for i in range(len(b)):
			b[i] = int(b[i])
		ma = max(b)
		mi = min(b)
		di = ma-mi
		if di>2000:
			err = str(z+1) + " Process has been killed"
			os.kill(int(ppid),9)
		os.system("rm pmp.txt ouh.txt")	
	os.system("rm output.txt output2.txt output3.txt")



root = Tk()
root.title("Malware Detector")

root.grid_rowconfigure(0, weight=1)
root.grid_columnconfigure(0, weight=1)



w = root.winfo_reqwidth()
h = root.winfo_reqheight()
ws = root.winfo_screenwidth()
hs = root.winfo_screenheight()
x = (ws/2) - (w/2)
y = (hs/2) - (h/2)
root.geometry('+%d+%d' % (x, y))


bottomFrame = Frame(root)
bottomFrame.grid(row=0,column=0,sticky='ns',rowspan=7,columnspan=6)



main1 = Label(bottomFrame,text="BEFORE",fg="red",anchor=CENTER)
main2 = Label(bottomFrame,text="AFTER",anchor=CENTER)



w1 = Text(bottomFrame,fg="red",bg="white")
w2 = Text(bottomFrame,fg="black",bg="white")


scrollbar1 = Scrollbar(bottomFrame, orient='vertical', command=w1.yview)
scrollbar2 = Scrollbar(bottomFrame, orient='vertical', command=w2.yview)




first = ['awk', '$8=="R"||$8=="S" {print $1,$12;}']
p1 = subprocess.Popen(["top","-b","-n","1","-d","1.0"], stdout=subprocess.PIPE)
p2 = subprocess.check_output(first, stdin=p1.stdout)
p3 = p2.split()
w1.insert(INSERT,"PID\t \t \t \t")
w1.insert(INSERT,"Name\n")
for i in range(2,len(p3),1):
	if i%2==0:#even
		w1.insert(INSERT,p3[i]+"\t \t \t \t")
	else:#odd
		w1.insert(INSERT,p3[i]+"\n")


Logic()

first = ['awk', '$8=="R"||$8=="S"  {print $1,$12;}']
p1 = subprocess.Popen(["top","-b","-n","1","-d","1.0"], stdout=subprocess.PIPE)
p2 = subprocess.check_output(first, stdin=p1.stdout)
p3 = p2.split()
w2.insert(INSERT,"PID\t \t \t \t")
w2.insert(INSERT,"Name\n")
for i in range(2,len(p3),1):
	if i%2==0:#even
		w2.insert(INSERT,p3[i]+"\t \t \t \t")
	else:#odd
		w2.insert(INSERT,p3[i]+"\n")

text = Label(bottomFrame,text=err,fg="red")

w1.config(state=DISABLED)
w2.config(state=DISABLED)


main1.grid(row=0,column=0,columnspan=3)
main2.grid(row=0,column=3,columnspan=3)

w1.grid(row=1,column=0,rowspan=5,columnspan=2)
w2.grid(row=1,column=3,rowspan=5,columnspan=2)


scrollbar1.grid(row=1,column=2,sticky='ns',rowspan=5,columnspan=1)
scrollbar2.grid(row=1,column=5,sticky='ns',rowspan=5,columnspan=1)

text.grid(row=6,column=0,rowspan=2,columnspan=6)

w1['yscrollcommand'] = scrollbar1.set
w2['yscrollcommand'] = scrollbar2.set



root.mainloop()